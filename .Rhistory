perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Time_Point, type = "free"),
blocks = df$Subject_ID, complete = T)
adonis2(dist ~ Treatment*Time_Point, permutations = perm.strata, data=df)
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Time_Point, type = "free"),
blocks = df$Subject_ID, nperm = 999)
adonis2(dist ~ Treatment*Time_Point, permutations = perm.strata, data=df)
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Time_Point, type = "free"),
plots = Plots(strata = df$Treatment, type = "free"),
blocks = df$Subject_ID, nperm = 999)
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
#plots = Plots(strata = df$Time_Point, type = "free"),
plots = Plots(strata = df$Treatment, type = "free"),
blocks = df$Subject_ID, nperm = 999)
adonis2(dist ~ Treatment*Time_Point, permutations = perm.strata, data=df)
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
#plots = Plots(strata = df$Time_Point, type = "free"),
plots = Plots(strata = df$Treatment, type = "free"),
blocks = df$Subject_ID, nperm = 999)
adonis2(dist ~ Treatment*Time_Point, permutations = perm.strata, data=df)
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Time_Point, type = "free"),
blocks = df$Subject_ID, nperm = 999)
adonis2(dist ~ Treatment*Time_Point, permutations = perm.strata, data=df)
adonis
getPermuteMatrix(perm.strata)
library(permute)
vegan:::getPermuteMatrix()
vegan:::getPermuteMatrix(perm.strata)
vegan:::getPermuteMatrix(perm.strata, n=999)
vegan:::getPermuteMatrix(perm.strata, N = 199)
vegan:::getPermuteMatrix(perm.strata, N = 20)
vegan:::getPermuteMatrix(perm.strata, N = 199)
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Time_Point, type = "free"),
blocks = df$Subject_ID, nperm = 999)
vegan:::getPermuteMatrix(perm.strata, N = 199)
perm.strata
df
adonis
adonis2
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Time_Point, type = "free"),
blocks = df$Subject_ID, nperm = 999)
getPermuteMatrix(perm.strata)
adonis2(dist ~ Treatment*Time_Point, permutations = perm.strata, data=df)
adonis2(dist ~ Treatment*Time_Point, permutations = perm.strata, data=df)
getPermuteMatrix(perm.strata)
vegan:::getPermuteMatrix(perm.strata)
vegan:::getPermuteMatrix(perm.strata, N=100)
adonis2
perm.strata
str(perm.strata)
sample_names(ps)
shuffle(sample_names(ps), control = perm.strata)
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Time_Point, type = "free"),
blocks = df$Subject_ID, nperm = 999)
shuffle(sample_names(ps.paired), control = perm.strata)
sample_names(ps.paired)
shuffle(sample_names(ps.paired), control = perm.strata)
shuffle(sample_names(ps.paired), control = perm.strata)
shuffle(sample_names(ps.paired), control = perm.strata)
shuffle(sample_names(ps.paired), control = perm.strata)
shuffle(sample_names(ps.paired), control = perm.strata)
shuffle(sample_names(ps.paired), control = perm.strata)
shuffle(sample_names(ps.paired), control = perm.strata)
shuffle(sample_names(ps.paired), control = perm.strata)
shuffle(sample_names(ps.paired), control = perm.strata)
shuffle(sample_names(ps.paired), control = perm.strata, n = 10)
shuffle(sample_names(ps.paired), control = perm.strata, n = 10)
shuffle(n=sample_names(ps.paired), control = perm.strata)
shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 10)
shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 10)
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Time_Point, type = "free"),
blocks = df$Subject_ID, nperm = 999)
shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 10)
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 10)
shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 10)[1]
shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 10)[1,]
perm <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 10)[1,]
df$Subject_ID[perm]
table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment[perm])
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Subject_ID, type = "free"))
shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 10)
perm <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 10)[1,]
table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment[perm])
perm <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 10)[2,]
table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment[perm])
shuffle(n=sample_names(ps.paired), control = perm.strata)
shuffle(n=sample_names(ps.paired), control = perm.strata)
shuffle(n=sample_names(ps.paired), control = perm.strata)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment[perm])
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment[perm])
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment[perm])
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
perm
df$Subject_ID
adonis2(dist ~ Treatment*Time_Point, permutations = perm.strata, data=df)
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment[perm])
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment[perm])
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment[perm])
perm.strata <- how(within = Within(type = "free", mirror = TRUE, ),
plots = Plots(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
perm.strata <- how(plots = Plots(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment[perm])
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment[perm])
perm.strata <- how(plots = Within(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
perm.strata <- how(plots = Plots(strata = df$Subject_ID, type = "free"),nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment[perm])
perm.strata <- how(plots = Plots(strata = df$Subject_ID, type = "free"),nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment[perm])
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
perm
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
perm
perm
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
perm
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
perm
table(df$Subject_ID[perm], df$Treatment)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
#table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
#table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
#table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
#table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment)
perm.strata <- how(plots = Plots(strata = df$Subject_ID, type = "free"),nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
#table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment)
perm.strata <- how(plots = Plots(strata = df$Subject_ID, type = "free"),nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
#table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment)
perm==1
table(df$Bio_Safety_Level[perm==1], df$Treatment[1])
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
#table(df$Subject_ID[perm], df$Time_Point[perm])
table(df$Subject_ID[perm], df$Treatment)
table(df$Bio_Safety_Level[perm==1], df$Treatment[1])
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(df$Bio_Safety_Level[perm==1], df$Treatment[1])
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(df$Bio_Safety_Level[perm==1], df$Treatment[1])
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(df$Subject_ID[perm==1], df$Treatment[1])
table(df$Subject_ID[perm==1], df$Treatment[1])
table(droplevels(df$Subject_ID[perm==1]), df$Treatment[1])
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(droplevels(df$Subject_ID[perm==1]), df$Treatment[1])
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(droplevels(df$Subject_ID[perm==1]), df$Treatment[1])
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(droplevels(df$Subject_ID[perm==1]), df$Treatment[1])
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(droplevels(df$Subject_ID[perm==1]), df$Treatment[1])
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(droplevels(df$Subject_ID[perm==1]), df$Treatment[1])
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
table(droplevels(df$Subject_ID[perm==1]), df$Treatment[1])
df$Subject_ID[perm==1])
df$Treatment[[perm==1]]
df$Treatment[perm==1]
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
df$Time_Point[perm==1]
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
df$Time_Point[perm==1]
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
df$Time_Point[perm==1]
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
df$Time_Point[perm==1]
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
df$Time_Point[perm==1]
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
df$Time_Point[perm==1]
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
df$Time_Point[perm==1]
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
df$Time_Point[perm==1]
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
df$Time_Point[perm==1]
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
df$Time_Point[perm==1]
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
df$Time_Point[perm==1]
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
df$Time_Point[perm==1]
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
df$Time_Point[perm==1]
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
df$Time_Point[perm==1]
table(droplevels(df$Subject_ID[perm==1]), df$Treatment[1])
perm.strata <- how(within = Within(type = "free", mirror = TRUE),
plots = Plots(strata = df$Subject_ID, type = "free"),
blocks = df$Time_Point, nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
df$Treatment[perm==1]
df$Time_Point[perm==1]
perm.strata <- how(plots = Plots(strata = df$Subject_ID, type = "free"),nperm = 999)
adonis2(dist ~ Treatment*Time_Point, permutations = perm.strata, data=df)
perm.strata <- how(plots = Plots(strata = df$Subject_ID, type = "free"),nperm = 999)
perm
df$Treatment
df$Subject_ID
df <- df[order(df$Subject_ID),]
df$Subject_ID
perm.strata <- how(plots = Plots(strata = df$Subject_ID, type = "free"),nperm = 999)
perm <- shuffle(n=sample_names(ps.paired), control = perm.strata)
perm
perm <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 3)
perm
perm[,1:20]
perm[,1:10]
perm <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 3)
perm[,1:10]
set.seed(1)
perm <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 3)
perm[,1:10]
perm <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 3)
perm[,1:10]
set.seed(1)
perm <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 3)
perm[,1:10]
set.seed(1)
perm <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 3)
perm[,1:10]
set.seed(2)
perm <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 3)
perm[,1:10]
set.seed(3)
perm <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 3)
perm[,1:10]
perm[,1:2]
set.seed(3)
perm <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 3)
perm[,1:2]
ps@sam_data$Subject_ID[perm[,1:2]]
df[perm[,1:2]]
df$Subject_ID[perm[,1:2]]
df$Subject_ID[t(perm[,1:2])]
df$Treatment[t(perm[,1:2])]
df$Time_Point[t(perm[,1:2])]
df[1:2,c("Subject_ID","Treatment","Time_Point")
]
df[1:2,c("Subject_ID","Treatment","Time_Point")]
df$Subject_ID[t(perm[,1:2])]
droplevels(df$Subject_ID[t(perm[,1:2])])
droplevels(df$Treatment[t(perm[,1:2])])
droplevels(df$Time_Point[t(perm[,1:2])])
df <- df[order(df$Subject_ID),]
perm.strata <- how(plots = Plots(strata = df$Subject_ID, type = "free"))
set.seed(3)
perm <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 3)
perm[,1:2]
df[1:2,c("Subject_ID","Treatment","Time_Point")]
droplevels(df$Subject_ID[t(perm[,1:2])])
droplevels(df$Treatment[t(perm[,1:2])])
droplevels(df$Time_Point[t(perm[,1:2])])
adonis2(dist ~ Treatment*Time_Point, permutations = perm.strata, data=df)
shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 100)
shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 100)[,1:2]
bla <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 100)[,1:2]
bla[,1]
table(bla[,1])
dist <- distance(microbiome::transform(ps.paired, "clr"), method = "euclidean")
df <- data.frame(ps.paired@sam_data)
perm <- how(nperm = 999)
adonis2 (dist ~ Treatment, permutations = perm, data = df)
adonis2 (dist ~ Treatment*Time_Point, permutations = perm, data = df)
df <- df[order(df$Subject_ID),]
perm.strata <- how(plots = Plots(strata = df$Subject_ID, type = "free"))
set.seed(3)
perm <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 3)
perm[,1:2]
df[1:2,c("Subject_ID","Treatment","Time_Point")]
droplevels(df$Subject_ID[t(perm[,1:2])])
droplevels(df$Treatment[t(perm[,1:2])])
droplevels(df$Time_Point[t(perm[,1:2])])
adonis2(dist ~ Treatment*Time_Point, permutations = perm.strata, data=df)
dist <- distance(ps.paired, "wunifrac")
df <- data.frame(ps.paired@sam_data)
perm <- how(nperm = 999)
adonis2 (dist ~ Treatment, permutations = perm, data = df)
df <- data.frame(ps.paired@sam_data)
perm <- how(nperm = 999)
adonis2 (dist ~ Treatment, permutations = perm, data = df)
According to this test, treatment allocation is significantly associated with the microbiome.
This is misleading as subjects is confounded in the design.
A possible solution is to test the treatment time interaction.
```{r}
adonis2 (dist ~ Treatment*Time_Point, permutations = perm, data = df)
adonis2 (dist ~ Treatment*Time_Point, permutations = perm, data = df)
Here we see that overall the two treatment arms are different, independent of time, indicative of the (subject) bias. But are the two groups truly different?
With the following permutation design we can permute the time label within a subject and the treatment among the subjects (the correct design).
Lets have a look at the permutation matrix.
```{r}
df <- df[order(df$Subject_ID),]
perm.strata <- how(plots = Plots(strata = df$Subject_ID, type = "free"))
set.seed(3)
perm <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 3)
perm[,1:2]
df[1:2,c("Subject_ID","Treatment","Time_Point")]
droplevels(df$Subject_ID[t(perm[,1:2])])
droplevels(df$Treatment[t(perm[,1:2])])
droplevels(df$Time_Point[t(perm[,1:2])])
df[1:2,c("Subject_ID","Treatment","Time_Point")]
droplevels(df$Subject_ID[t(perm[,1:2])])
droplevels(df$Treatment[t(perm[,1:2])])
droplevels(df$Time_Point[t(perm[,1:2])])
As you can see the samples are permuted in pairs, and the order of the pairs is shuffled.
```{r}
adonis2(dist ~ Treatment*Time_Point, permutations = perm.strata, data=df)
ps@otu_table[,order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point)]
ps <- phyloseq(otu_table(ps@otu_table[,order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point)]), tax_table(ps), sample_data(ps@sam_data[ps@otu_table[,order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point)],]))
ps <- readRDS(url("https://github.com/AMCMC/MiCA-Tutorials/raw/master/Data_files/ps.2018_27_RED_study.2019-03-04.filtered.RDS"))
ps <- readRDS(url("https://github.com/AMCMC/MiCA-Tutorials/raw/master/Data_files/ps.2018_27_RED_study.2019-03-04.filtered.RDS"))
ps@sam_data$Treatment <- ps@sam_data$Randomization
ps <- phyloseq(otu_table(ps@otu_table[,order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point)]), tax_table(ps), sample_data(ps@sam_data[ps@otu_table[,order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point)],]), ps@phy_tree)
ps@sam_data$Subject_ID
ps <- readRDS(url("https://github.com/AMCMC/MiCA-Tutorials/raw/master/Data_files/ps.2018_27_RED_study.2019-03-04.filtered.RDS"))
ps@sam_data$Treatment <- ps@sam_data$Randomization
ps@sam_data$Subject_ID
order(ps@sam_dataSub)
order(ps@sam_data$Subject_ID)
ps <- phyloseq(otu_table(ps@otu_table@.Data[,order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point)], taxa_are_rows = T), tax_table(ps), sample_data(ps@sam_data[ps@otu_table[,order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point)],]), ps@phy_tree)
ps@otu_table
ps <- phyloseq(otu_table(ps@otu_table@.Data[,order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point)], taxa_are_rows = F), tax_table(ps), sample_data(ps@sam_data[ps@otu_table[,order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point)],]), ps@phy_tree)
ps
ps <- readRDS(url("https://github.com/AMCMC/MiCA-Tutorials/raw/master/Data_files/ps.2018_27_RED_study.2019-03-04.filtered.RDS"))
ps@sam_data$Treatment <- ps@sam_data$Randomization
ps
phyloseq(otu_table(ps@otu_table@.Data[,order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point)], taxa_are_rows = F), tax_table(ps), sample_data(ps@sam_data[ps@otu_table[,order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point)],]), ps@phy_tree)
phyloseq(otu_table(ps@otu_table@.Data[order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point),], taxa_are_rows = F), tax_table(ps), sample_data(ps@sam_data[ps@otu_table[,order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point)],]), ps@phy_tree)
ps <- phyloseq(otu_table(ps@otu_table@.Data[order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point),], taxa_are_rows = F), tax_table(ps), sample_data(ps@sam_data[ps@otu_table[,order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point)],]), ps@phy_tree)
ps@sam_data$Subject_ID
ps@sam_data$Time_Point
ps <- phyloseq(otu_table(ps@otu_table@.Data[order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point),], taxa_are_rows = F), tax_table(ps), sample_data(ps), ps@phy_tree)
ps <- readRDS(url("https://github.com/AMCMC/MiCA-Tutorials/raw/master/Data_files/ps.2018_27_RED_study.2019-03-04.filtered.RDS"))
ps@sam_data$Treatment <- ps@sam_data$Randomization
ps <- phyloseq(otu_table(ps@otu_table@.Data[order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point),], taxa_are_rows = F), tax_table(ps), sample_data(ps), ps@phy_tree)
ps.rare<- rarefy_even_depth(ps, sample.size = 25000, rngseed = 21122, replace = F)
ps.paired <- prune_samples(ps.rare@sam_data$Subject_ID %in%  names(which(table(ps.rare@sam_data$Subject_ID)!=1)), ps.rare)
table(ps.paired@sam_data$Treatment, ps.paired@sam_data$Time_Point)
dist <- distance(ps.paired, "bray")
#dist <- distance(ps.paired, "wunifrac")
#dist <- distance(microbiome::transform(ps.paired, "clr"), method = "euclidean")
df <- data.frame(ps.paired@sam_data)
perm <- how(nperm = 999)
adonis2 (dist ~ Treatment, permutations = perm, data = df)
set.seed((1))
dist <- distance(ps.paired, "bray")
#dist <- distance(ps.paired, "wunifrac")
#dist <- distance(microbiome::transform(ps.paired, "clr"), method = "euclidean")
df <- data.frame(ps.paired@sam_data)
perm <- how(nperm = 999)
adonis2 (dist ~ Treatment, permutations = perm, data = df)
set.seed((1))
dist <- distance(ps.paired, "bray")
#dist <- distance(ps.paired, "wunifrac")
#dist <- distance(microbiome::transform(ps.paired, "clr"), method = "euclidean")
df <- data.frame(ps.paired@sam_data)
perm <- how(nperm = 999)
adonis2 (dist ~ Treatment, permutations = perm, data = df)
set.seed((1))
dist <- distance(ps.paired, "bray")
#dist <- distance(ps.paired, "wunifrac")
#dist <- distance(microbiome::transform(ps.paired, "clr"), method = "euclidean")
df <- data.frame(ps.paired@sam_data)
perm <- how(nperm = 999)
adonis2 (dist ~ Treatment, permutations = perm, data = df)
set.seed((1))
adonis2 (dist ~ Treatment*Time_Point, permutations = perm, data = df)
set.seed((1))
adonis2 (dist ~ Treatment*Time_Point, permutations = perm, data = df)
perm.strata <- how(plots = Plots(strata = df$Subject_ID, type = "free"))
set.seed(3)
perm <- shuffleSet(n=sample_names(ps.paired), control = perm.strata, nset = 3)
perm[,1:2]
df[1:2,c("Subject_ID","Treatment","Time_Point")]
droplevels(df$Subject_ID[t(perm[,1:2])])
droplevels(df$Treatment[t(perm[,1:2])])
droplevels(df$Time_Point[t(perm[,1:2])])
adonis2(dist ~ Treatment*Time_Point, permutations = perm.strata, data=df)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
cran <- c("ggplot2",
"ggpubr",
"vegan",
"permute",
NULL)
install.packages(cran[!cran %in% installed.packages()])
bioc. <- c("phyloseq",
"mixOmics",
NULL)
BiocManager::install(bioc.[!bioc. %in% installed.packages()], update = F)
library(phyloseq)
library(mixOmics)
library(ggplot2)
library(ggpubr)
library(permute)
library(vegan)
ps <- readRDS(url("https://github.com/AMCMC/MiCA-Tutorials/raw/master/Data_files/ps.2018_27_RED_study.2019-03-04.filtered.RDS"))
ps@sam_data$Treatment <- ps@sam_data$Randomization
ps <- phyloseq(otu_table(ps@otu_table@.Data[order(ps@sam_data$Subject_ID, ps@sam_data$Time_Point),], taxa_are_rows = F), tax_table(ps), sample_data(ps), ps@phy_tree)
ps.rare<- rarefy_even_depth(ps, sample.size = 25000, rngseed = 21122, replace = F)
ps.paired <- prune_samples(ps.rare@sam_data$Subject_ID %in%  names(which(table(ps.rare@sam_data$Subject_ID)!=1)), ps.rare)
table(ps.paired@sam_data$Treatment, ps.paired@sam_data$Time_Point)
set.seed((1))
dist <- distance(ps.paired, "bray")
#dist <- distance(ps.paired, "wunifrac")
#dist <- distance(microbiome::transform(ps.paired, "clr"), method = "euclidean")
df <- data.frame(ps.paired@sam_data)
perm <- how(nperm = 999)
adonis2 (dist ~ Treatment, permutations = perm, data = df)
